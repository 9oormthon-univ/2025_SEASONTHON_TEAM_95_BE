name: fakecheck
on:
  push:
    branches:
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 소스코드 및 서브모듈 체크아웃
        uses: actions/checkout@v4

      - name: JDK 설치
        uses: actions/setup-java@v4
        with:
          distribution: liberica
          java-version: 21

      - name: Create application.yml files
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          
          # 메인 application.yml 생성 (프로필 그룹 설정 포함)
          echo "${{ secrets.APPLICATION_YML }}" > ./application.yml
          
          # 각 프로필별 yml 파일 생성
          echo "${{ secrets.APPLICATION_LOCAL_YML }}" > ./application-local.yml
          echo "${{ secrets.APPLICATION_PROD_YML }}" > ./application-prod.yml  
          echo "${{ secrets.APPLICATION_S3_YML }}" > ./application-s3.yml
          
          # 생성된 파일 확인 (디버깅용)
          ls -la
          echo "✅ application.yml 파일들이 성공적으로 생성되었습니다."

      - name: Gradlew 실행 권한 부여
        run: chmod +x gradlew

      - name: Spring Boot JAR 빌드
        run: ./gradlew bootJar

      - name: Docker Hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker 이미지 빌드 및 푸시
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME}}/fakecheck:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/fakecheck:latest

      - name: AWS EC2에 배포
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script_stop: true
          script: |
            docker stop fakecheck || true
            docker rm fakecheck || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/fakecheck:latest
            docker run -d --name fakecheck --network="host" ${{ secrets.DOCKER_USERNAME }}/fakecheck:latest